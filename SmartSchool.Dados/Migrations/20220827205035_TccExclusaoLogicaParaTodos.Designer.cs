// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SmartSchool.Dados.Contextos;

namespace SmartSchool.Dados.Migrations
{
    [DbContext(typeof(SmartContexto))]
    [Migration("20220827205035_TccExclusaoLogicaParaTodos")]
    partial class TccExclusaoLogicaParaTodos
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("SmartSchool")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SmartSchool.Dominio.Alunos.Aluno", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ALUN_ID_ALUNO");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit")
                        .HasColumnName("ALUN_IN_ATIVO");

                    b.Property<string>("Celular")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)")
                        .HasColumnName("ALUN_NR_CELULAR");

                    b.Property<string>("Cidade")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)")
                        .HasColumnName("ALUN_TXT_CIDADE");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)")
                        .HasColumnName("ALUN_NR_CPF");

                    b.Property<Guid>("CursoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ALUN_ID_CURSO");

                    b.Property<DateTime>("DataFim")
                        .HasColumnType("datetime2")
                        .HasColumnName("ALUN_DT_FIM");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("datetime2")
                        .HasColumnName("ALUN_DT_INICIO");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2")
                        .HasColumnName("ALUN_DT_NASCIMENTO");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("ALUN_TXT_EMAIL");

                    b.Property<string>("Endereco")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasColumnName("ALUN_TXT_ENDERECO");

                    b.Property<int>("Matricula")
                        .HasColumnType("int")
                        .HasColumnName("ALUN_COD_ALUNO");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)")
                        .HasColumnName("ALUN_NM_NOME");

                    b.Property<string>("Sobrenome")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasColumnName("ALUN_NM_SOBRENOME");

                    b.Property<string>("Telefone")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)")
                        .HasColumnName("ALUN_NR_TELEFONE");

                    b.HasKey("ID");

                    b.HasIndex("CursoId");

                    b.ToTable("ALUNO");
                });

            modelBuilder.Entity("SmartSchool.Dominio.Alunos.AlunoDisciplina", b =>
                {
                    b.Property<Guid>("AlunoID")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ALDI_ID_ALUNO");

                    b.Property<Guid>("DisciplinaID")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ALDI_ID_DISCIPLINA");

                    b.HasKey("AlunoID", "DisciplinaID");

                    b.HasIndex("DisciplinaID");

                    b.ToTable("ALUNO_DISCIPLINA");
                });

            modelBuilder.Entity("SmartSchool.Dominio.Cursos.Curso", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CURS_ID_CURSO");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit")
                        .HasColumnName("CURS_IN_ATIVO");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)")
                        .HasColumnName("CURS_NM_CURSO");

                    b.HasKey("ID");

                    b.ToTable("CURSO");
                });

            modelBuilder.Entity("SmartSchool.Dominio.Disciplinas.CursoDisciplina", b =>
                {
                    b.Property<Guid>("CursoID")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CUDI_ID_CURSO");

                    b.Property<Guid>("DisciplinaID")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CUDI_ID_DISCIPLINA");

                    b.HasKey("CursoID", "DisciplinaID");

                    b.HasIndex("DisciplinaID");

                    b.ToTable("CURSO_DISCIPLINA");
                });

            modelBuilder.Entity("SmartSchool.Dominio.Disciplinas.Disciplina", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DISC_ID_DISCIPLINA");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit")
                        .HasColumnName("DISC_IN_ATIVO");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)")
                        .HasColumnName("DISC_NM_NOME");

                    b.Property<int>("Periodo")
                        .HasColumnType("int")
                        .HasColumnName("DISC_ID_PERIODO");

                    b.HasKey("ID");

                    b.ToTable("DISCIPLINA");
                });

            modelBuilder.Entity("SmartSchool.Dominio.Professores.Professor", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("PROF_ID_PROFESSOR");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit")
                        .HasColumnName("PROF_IN_ATIVO");

                    b.Property<int>("Matricula")
                        .HasColumnType("int")
                        .HasColumnName("PROF_COD_PROFESSOR");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(160)
                        .HasColumnType("nvarchar(160)")
                        .HasColumnName("PROF_NM_NOME");

                    b.HasKey("ID");

                    b.ToTable("PROFESSOR");
                });

            modelBuilder.Entity("SmartSchool.Dominio.Professores.ProfessorDisciplina", b =>
                {
                    b.Property<Guid>("ProfessorID")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("PRDI_ID_PROFESSOR");

                    b.Property<Guid>("DisciplinaID")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("PRDI_ID_DISCIPLINA");

                    b.HasKey("ProfessorID", "DisciplinaID");

                    b.HasIndex("DisciplinaID");

                    b.ToTable("PROFESSOR_DISCIPLINA");
                });

            modelBuilder.Entity("SmartSchool.Dominio.Semestres.Semestre", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("SEME_ID_SEMESTRE");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit")
                        .HasColumnName("SEME_IN_ATIVO");

                    b.Property<DateTime>("DataFim")
                        .HasColumnType("datetime2")
                        .HasColumnName("SEME_DT_FIM");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("datetime2")
                        .HasColumnName("SEME_DT_INICIO");

                    b.HasKey("ID");

                    b.ToTable("SEMESTRE");
                });

            modelBuilder.Entity("SmartSchool.Dominio.Semestres.SemestreAlunoDisciplina", b =>
                {
                    b.Property<Guid>("SemestreID")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("SEAD_ID_SEMESTRE");

                    b.Property<Guid>("AlunoID")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("SEAD_ID_ALUNO");

                    b.Property<Guid>("DisciplinaID")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("SEAD_ID_DISCIPLINA");

                    b.Property<int>("Periodo")
                        .HasColumnType("int")
                        .HasColumnName("SEAD_ID_PERIODO");

                    b.Property<int>("StatusDisciplina")
                        .HasColumnType("int")
                        .HasColumnName("SEAD_ID_STATUS_DISCIPLINA");

                    b.HasKey("SemestreID", "AlunoID", "DisciplinaID");

                    b.HasIndex("AlunoID", "DisciplinaID");

                    b.ToTable("SEMESTRE_ALUNO_DISCIPLINA");
                });

            modelBuilder.Entity("SmartSchool.Dominio.Tccs.Tcc", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TCC_ID_TCC");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit")
                        .HasColumnName("TCC_IN_ATIVO");

                    b.Property<string>("Descricao")
                        .HasMaxLength(3008)
                        .HasColumnType("nvarchar(3008)")
                        .HasColumnName("TCC_TXT_DESCRIÇÃO");

                    b.Property<string>("Objetivo")
                        .IsRequired()
                        .HasMaxLength(502)
                        .HasColumnType("nvarchar(502)")
                        .HasColumnName("TCC_TXT_OBJETIVO");

                    b.Property<string>("Problematica")
                        .IsRequired()
                        .HasMaxLength(3008)
                        .HasColumnType("nvarchar(3008)")
                        .HasColumnName("TCC_TXT_PROBLEMATICA");

                    b.Property<string>("Tema")
                        .IsRequired()
                        .HasMaxLength(160)
                        .HasColumnType("nvarchar(160)")
                        .HasColumnName("TCC_NM_TEMA");

                    b.HasKey("ID");

                    b.ToTable("TCC");
                });

            modelBuilder.Entity("SmartSchool.Dominio.Tccs.TccAlunoProfessor", b =>
                {
                    b.Property<Guid>("TccID")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TAPR_ID_TCC");

                    b.Property<Guid>("AlunoID")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TAPR_ID_ALUNO");

                    b.Property<Guid>("ProfessorID")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TAPR_ID_PROFESSOR");

                    b.Property<DateTime>("DataSolicitacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("TAPR_ID_DATA_SOLICITACAO");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("TAPR_ID_STATUS_TCC");

                    b.HasKey("TccID", "AlunoID", "ProfessorID");

                    b.HasIndex("AlunoID", "ProfessorID");

                    b.ToTable("TCC_ALUNO_PROFESSOR");
                });

            modelBuilder.Entity("SmartSchool.Dominio.Tccs.TccProfessor", b =>
                {
                    b.Property<Guid>("ProfessorID")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TCPR_ID_PROFESSOR");

                    b.Property<Guid>("TccID")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TCPR_ID_TCC");

                    b.HasKey("ProfessorID", "TccID");

                    b.HasIndex("TccID");

                    b.ToTable("TCC_PROFESSOR");
                });

            modelBuilder.Entity("SmartSchool.Dominio.Alunos.Aluno", b =>
                {
                    b.HasOne("SmartSchool.Dominio.Cursos.Curso", "Curso")
                        .WithMany("Alunos")
                        .HasForeignKey("CursoId")
                        .HasConstraintName("FK_ALUN_CURSO")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Curso");
                });

            modelBuilder.Entity("SmartSchool.Dominio.Alunos.AlunoDisciplina", b =>
                {
                    b.HasOne("SmartSchool.Dominio.Alunos.Aluno", "Aluno")
                        .WithMany("AlunosDisciplinas")
                        .HasForeignKey("AlunoID")
                        .HasConstraintName("FK_ALUN_DISC")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmartSchool.Dominio.Disciplinas.Disciplina", "Disciplina")
                        .WithMany("Alunos")
                        .HasForeignKey("DisciplinaID")
                        .HasConstraintName("FK_DISC_ALUN")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aluno");

                    b.Navigation("Disciplina");
                });

            modelBuilder.Entity("SmartSchool.Dominio.Disciplinas.CursoDisciplina", b =>
                {
                    b.HasOne("SmartSchool.Dominio.Cursos.Curso", "Curso")
                        .WithMany("CursosDisciplinas")
                        .HasForeignKey("CursoID")
                        .HasConstraintName("FK_CURS_DISC")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmartSchool.Dominio.Disciplinas.Disciplina", "Disciplina")
                        .WithMany("Cursos")
                        .HasForeignKey("DisciplinaID")
                        .HasConstraintName("FK_DISC_CURS")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Curso");

                    b.Navigation("Disciplina");
                });

            modelBuilder.Entity("SmartSchool.Dominio.Professores.ProfessorDisciplina", b =>
                {
                    b.HasOne("SmartSchool.Dominio.Disciplinas.Disciplina", "Disciplina")
                        .WithMany("ProfessoresDisciplinas")
                        .HasForeignKey("DisciplinaID")
                        .HasConstraintName("FK_DISC_PROF")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmartSchool.Dominio.Professores.Professor", "Professor")
                        .WithMany("ProfessoresDisciplinas")
                        .HasForeignKey("ProfessorID")
                        .HasConstraintName("FK_PROF_DISC")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Disciplina");

                    b.Navigation("Professor");
                });

            modelBuilder.Entity("SmartSchool.Dominio.Semestres.SemestreAlunoDisciplina", b =>
                {
                    b.HasOne("SmartSchool.Dominio.Alunos.Aluno", null)
                        .WithMany("SemestresDisciplinas")
                        .HasForeignKey("AlunoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmartSchool.Dominio.Semestres.Semestre", "Semestre")
                        .WithMany("AlunosDisciplinas")
                        .HasForeignKey("SemestreID")
                        .HasConstraintName("FK_SEME_ALDI")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmartSchool.Dominio.Alunos.AlunoDisciplina", "AlunoDisciplina")
                        .WithMany("Semestres")
                        .HasForeignKey("AlunoID", "DisciplinaID")
                        .HasConstraintName("FK_ALDI_SEME")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AlunoDisciplina");

                    b.Navigation("Semestre");
                });

            modelBuilder.Entity("SmartSchool.Dominio.Tccs.TccAlunoProfessor", b =>
                {
                    b.HasOne("SmartSchool.Dominio.Alunos.Aluno", "Aluno")
                        .WithMany("TccsProfessores")
                        .HasForeignKey("AlunoID")
                        .HasConstraintName("FK_ALUN_TAPR")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmartSchool.Dominio.Tccs.TccProfessor", "ProfessorTcc")
                        .WithMany("Alunos")
                        .HasForeignKey("AlunoID", "ProfessorID")
                        .HasConstraintName("FK_TAPR_ALUN")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Aluno");

                    b.Navigation("ProfessorTcc");
                });

            modelBuilder.Entity("SmartSchool.Dominio.Tccs.TccProfessor", b =>
                {
                    b.HasOne("SmartSchool.Dominio.Professores.Professor", "Professor")
                        .WithMany("Tccs")
                        .HasForeignKey("ProfessorID")
                        .HasConstraintName("FK_PROF_TCC")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmartSchool.Dominio.Tccs.Tcc", "Tcc")
                        .WithMany("Professores")
                        .HasForeignKey("TccID")
                        .HasConstraintName("FK_TCC_PROF")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Professor");

                    b.Navigation("Tcc");
                });

            modelBuilder.Entity("SmartSchool.Dominio.Alunos.Aluno", b =>
                {
                    b.Navigation("AlunosDisciplinas");

                    b.Navigation("SemestresDisciplinas");

                    b.Navigation("TccsProfessores");
                });

            modelBuilder.Entity("SmartSchool.Dominio.Alunos.AlunoDisciplina", b =>
                {
                    b.Navigation("Semestres");
                });

            modelBuilder.Entity("SmartSchool.Dominio.Cursos.Curso", b =>
                {
                    b.Navigation("Alunos");

                    b.Navigation("CursosDisciplinas");
                });

            modelBuilder.Entity("SmartSchool.Dominio.Disciplinas.Disciplina", b =>
                {
                    b.Navigation("Alunos");

                    b.Navigation("Cursos");

                    b.Navigation("ProfessoresDisciplinas");
                });

            modelBuilder.Entity("SmartSchool.Dominio.Professores.Professor", b =>
                {
                    b.Navigation("ProfessoresDisciplinas");

                    b.Navigation("Tccs");
                });

            modelBuilder.Entity("SmartSchool.Dominio.Semestres.Semestre", b =>
                {
                    b.Navigation("AlunosDisciplinas");
                });

            modelBuilder.Entity("SmartSchool.Dominio.Tccs.Tcc", b =>
                {
                    b.Navigation("Professores");
                });

            modelBuilder.Entity("SmartSchool.Dominio.Tccs.TccProfessor", b =>
                {
                    b.Navigation("Alunos");
                });
#pragma warning restore 612, 618
        }
    }
}
